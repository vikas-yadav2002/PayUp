generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int                 @id @default(autoincrement())
  email                   String?             @unique
  name                    String?
  number                  String              @unique
  password                String
  OnRampTransaction       OnRampTransaction[]
  Balance                 Balance[]
  SentTransaction         p2ptransactions[]     @relation(name: "FromUserTransaction")
  ReccievedTransaction    p2ptransactions[]     @relation(name: "ToUserTransaction")
  // merchantTransaction     MerchantTransactions[]  

}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
  // balance  Balance[]
  tranactions  MerchantTransactions[]
}

model MerchantTransactions {
  id            Int      @id @default(autoincrement())
  merchantId    Int
  merchant     Merchant @relation(fields: [merchantId], references: [id])
  timestamp   DateTime
  // customerId  Int
  // user        User @relation(fields: [customerId] , references: [id])

}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id           Int  @id @default(autoincrement())
  userId       Int  @unique
  // merchantId   Int  @unique
  amount       Int
  locked       Int
  user         User @relation(fields: [userId], references: [id])
  // marchant    Merchant @relation(fields: [merchantId] , references: [id])
}

model p2ptransactions {
  id           Int          @id @default(autoincrement())
  amount       Int  
  Timestamp    DateTime
  fromUserId   Int
  fromUser     User         @relation( name :"FromUserTransaction"  , fields: [fromUserId], references: [id])
  toUserId     Int
  toUser       User         @relation(  name : "ToUserTransaction"   ,fields: [toUserId], references: [id])

}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
